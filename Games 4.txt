<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Space To soil: Space Agriculture</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background: linear-gradient(135deg, #0a0e2a, #1a1f4b, #0a0e2a);
            color: #e0f7ff;
            min-height: 100vh;
            overflow-x: hidden;
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 20px;
        }
        
        .game-container {
            max-width: 1200px;
            width: 100%;
            background: rgba(10, 20, 40, 0.85);
            border-radius: 20px;
            box-shadow: 0 0 30px rgba(0, 150, 255, 0.4);
            border: 2px solid rgba(0, 200, 255, 0.3);
            overflow: hidden;
            position: relative;
        }
        
        header {
            text-align: center;
            padding: 25px;
            background: rgba(15, 30, 60, 0.9);
            border-bottom: 2px solid rgba(0, 200, 255, 0.3);
        }
        
        h1 {
            font-size: 3.5rem;
            margin-bottom: 10px;
            background: linear-gradient(to right, #ff6b6b, #ffd93d, #6bcf7f, #4d96ff);
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
            text-shadow: 0 0 15px rgba(255, 255, 255, 0.5);
        }
        
        .subtitle {
            font-size: 1.3rem;
            color: #a0e7ff;
            max-width: 800px;
            margin: 0 auto;
        }
        
        .tabs {
            display: flex;
            background: rgba(20, 40, 80, 0.7);
            border-bottom: 1px solid rgba(0, 200, 255, 0.3);
        }
        
        .tab {
            flex: 1;
            padding: 15px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s;
            font-weight: bold;
            border-right: 1px solid rgba(0, 200, 255, 0.2);
        }
        
        .tab:last-child {
            border-right: none;
        }
        
        .tab:hover {
            background: rgba(30, 60, 120, 0.7);
        }
        
        .tab.active {
            background: rgba(40, 80, 160, 0.7);
            border-bottom: 3px solid #ffd93d;
        }
        
        .tab-content {
            display: none;
            padding: 25px;
        }
        
        .tab-content.active {
            display: block;
        }
        
        .game-area {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 25px;
        }
        
        @media (max-width: 900px) {
            .game-area {
                grid-template-columns: 1fr;
            }
        }
        
        .panel {
            background: rgba(15, 30, 60, 0.7);
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 0 15px rgba(0, 100, 255, 0.2);
            border: 1px solid rgba(0, 150, 255, 0.2);
        }
        
        .panel h2 {
            color: #ffd93d;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 1px solid rgba(0, 200, 255, 0.3);
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .panel h2 i {
            font-size: 1.5rem;
        }
        
        .farm-grid {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 15px;
            margin: 20px 0;
        }
        
        .plot {
            width: 100%;
            aspect-ratio: 1;
            background: rgba(20, 40, 80, 0.8);
            border: 2px solid #2a4a7a;
            border-radius: 10px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            cursor: pointer;
            transition: all 0.3s;
            position: relative;
            overflow: hidden;
        }
        
        .plot:hover {
            transform: scale(1.05);
            box-shadow: 0 0 10px rgba(0, 200, 255, 0.7);
        }
        
        .plot.empty {
            background: rgba(15, 35, 70, 0.8);
        }
        
        .plot.planted {
            background: rgba(25, 60, 100, 0.8);
        }
        
        .crop {
            font-size: 2rem;
            margin-bottom: 5px;
            transition: all 0.5s;
        }
        
        .crop.growing {
            animation: grow 2s infinite alternate;
        }
        
        @keyframes grow {
            0% { transform: scale(0.8); }
            100% { transform: scale(1.1); }
        }
        
        .crop.ready {
            animation: pulse 1.5s infinite;
            filter: brightness(1.3) drop-shadow(0 0 5px gold);
        }
        
        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.2); }
            100% { transform: scale(1); }
        }
        
        .progress-bar {
            width: 80%;
            height: 8px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 4px;
            overflow: hidden;
            margin-top: 5px;
        }
        
        .progress {
            height: 100%;
            background: linear-gradient(to right, #6bcf7f, #4d96ff);
            border-radius: 4px;
            transition: width 0.5s;
        }
        
        .resources {
            display: flex;
            justify-content: space-between;
            margin: 20px 0;
            padding: 15px;
            background: rgba(20, 40, 80, 0.6);
            border-radius: 10px;
            flex-wrap: wrap;
            gap: 10px;
        }
        
        .resource {
            display: flex;
            align-items: center;
            gap: 8px;
            font-size: 1.1rem;
        }
        
        .resource i {
            font-size: 1.5rem;
        }
        
        .coins i { color: #ffd93d; }
        .water i { color: #4d96ff; }
        .energy i { color: #ff6b6b; }
        .seeds i { color: #6bcf7f; }
        
        .actions {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 12px;
            margin: 20px 0;
        }
        
        button {
            padding: 12px;
            border: none;
            border-radius: 10px;
            background: linear-gradient(to right, #4d96ff, #6bcf7f);
            color: white;
            font-weight: bold;
            font-size: 1rem;
            cursor: pointer;
            transition: all 0.3s;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
        }
        
        button:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(0, 150, 255, 0.4);
        }
        
        button:active {
            transform: translateY(0);
        }
        
        button:disabled {
            background: #555;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }
        
        .crops-shop {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 12px;
            margin: 20px 0;
        }
        
        .crop-option {
            background: rgba(20, 40, 80, 0.6);
            border-radius: 10px;
            padding: 15px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s;
            border: 2px solid transparent;
        }
        
        .crop-option:hover {
            transform: translateY(-5px);
            border-color: #4d96ff;
        }
        
        .crop-option.selected {
            border-color: #ffd93d;
            background: rgba(30, 60, 120, 0.7);
            box-shadow: 0 0 15px rgba(255, 217, 61, 0.3);
        }
        
        .crop-icon {
            font-size: 2.5rem;
            margin-bottom: 10px;
        }
        
        .crop-price {
            color: #ffd93d;
            font-weight: bold;
            margin-top: 5px;
        }
        
        .plant-info {
            background: rgba(20, 40, 80, 0.6);
            border-radius: 10px;
            padding: 15px;
            margin-top: 20px;
        }
        
        .info-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
            margin-top: 10px;
        }
        
        .info-item {
            display: flex;
            flex-direction: column;
            gap: 5px;
        }
        
        .info-label {
            font-size: 0.9rem;
            color: #a0e7ff;
        }
        
        .info-value {
            font-weight: bold;
            font-size: 1.1rem;
        }
        
        .events-panel {
            max-height: 200px;
            overflow-y: auto;
            padding: 10px;
            background: rgba(0, 0, 0, 0.3);
            border-radius: 10px;
            margin-top: 15px;
        }
        
        .event {
            padding: 8px;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            font-size: 0.9rem;
            display: flex;
            align-items: center;
            gap: 8px;
        }
        
        .event:last-child {
            border-bottom: none;
        }
        
        .guide-content {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }
        
        .guide-card {
            background: rgba(20, 40, 80, 0.6);
            border-radius: 10px;
            padding: 20px;
            transition: all 0.3s;
        }
        
        .guide-card:hover {
            transform: translateY(-5px);
            background: rgba(30, 60, 120, 0.7);
        }
        
        .guide-icon {
            font-size: 2.5rem;
            margin-bottom: 15px;
            text-align: center;
        }
        
        .guide-title {
            font-size: 1.2rem;
            font-weight: bold;
            margin-bottom: 10px;
            color: #ffd93d;
        }
        
        .guide-details {
            font-size: 0.9rem;
            line-height: 1.5;
        }
        
        .guide-details ul {
            padding-left: 20px;
            margin-top: 10px;
        }
        
        .guide-details li {
            margin-bottom: 5px;
        }
        
        .nasa-content {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }
        
        .nasa-card {
            background: rgba(20, 40, 80, 0.6);
            border-radius: 10px;
            padding: 20px;
            transition: all 0.3s;
        }
        
        .nasa-card:hover {
            transform: translateY(-5px);
            background: rgba(30, 60, 120, 0.7);
        }
        
        .nasa-icon {
            font-size: 2.5rem;
            margin-bottom: 15px;
            text-align: center;
            color: #4d96ff;
        }
        
        .nasa-title {
            font-size: 1.2rem;
            font-weight: bold;
            margin-bottom: 10px;
            color: #ffd93d;
        }
        
        .nasa-details {
            font-size: 0.9rem;
            line-height: 1.5;
        }
        
        .nasa-details ul {
            padding-left: 20px;
            margin-top: 10px;
        }
        
        .nasa-details li {
            margin-bottom: 5px;
        }
        
        .stars {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: -1;
        }
        
        .star {
            position: absolute;
            background: white;
            border-radius: 50%;
            animation: twinkle 5s infinite;
        }
        
        @keyframes twinkle {
            0% { opacity: 0.2; }
            50% { opacity: 1; }
            100% { opacity: 0.2; }
        }
        
        .planet {
            position: absolute;
            border-radius: 50%;
            z-index: -1;
        }
        
        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 20px;
            background: rgba(20, 60, 120, 0.9);
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
            border-left: 4px solid #6bcf7f;
            transform: translateX(120%);
            transition: transform 0.5s;
            z-index: 1000;
            max-width: 300px;
        }
        
        .notification.show {
            transform: translateX(0);
        }
        
        .notification.error {
            border-left-color: #ff6b6b;
        }
        
        .day-counter {
            position: absolute;
            top: 20px;
            right: 20px;
            background: rgba(20, 40, 80, 0.8);
            padding: 10px 15px;
            border-radius: 10px;
            font-weight: bold;
            border: 1px solid rgba(0, 200, 255, 0.3);
        }
        
        footer {
            text-align: center;
            margin-top: 30px;
            padding: 20px;
            color: #a0e7ff;
            font-size: 0.9rem;
            max-width: 1200px;
        }
    </style>
</head>
<body>
    <div class="stars" id="stars"></div>
    <div class="planet" id="planet1"></div>
    <div class="planet" id="planet2"></div>
    
    <div class="notification" id="notification">
        <div id="notificationText">Welcome to Space To Soil!</div>
    </div>
    
    <div class="game-container">
        <header>
            <h1><i class="fas fa-seedling"></i> Space To Soil</h1>
            <p class="subtitle">Learn real plant growth techniques while farming in space! Discover how much water, time, and care each vegetable needs.</p>
            <div class="day-counter">Day: <span id="day">1</span></div>
        </header>
        
        <div class="tabs">
            <div class="tab active" data-tab="game">Space Farm</div>
            <div class="tab" data-tab="guide">Planting Guide</div>
            <div class="tab" data-tab="nasa">NASA Research</div>
        </div>
        
        <div class="tab-content active" id="game-tab">
            <div class="resources">
                <div class="resource coins">
                    <i class="fas fa-coins"></i>
                    <span id="coins">100</span>
                </div>
                <div class="resource water">
                    <i class="fas fa-tint"></i>
                    <span id="water">50</span> L
                </div>
                <div class="resource energy">
                    <i class="fas fa-bolt"></i>
                    <span id="energy">30</span>
                </div>
                <div class="resource seeds">
                    <i class="fas fa-seedling"></i>
                    <span id="seeds">10</span>
                </div>
            </div>
            
            <div class="game-area">
                <div class="panel">
                    <h2><i class="fas fa-tractor"></i> Space Farm Plots</h2>
                    <div class="farm-grid" id="farmGrid">
                        <!-- Farm plots will be generated by JavaScript -->
                    </div>
                    
                    <div class="actions">
                        <button id="waterBtn">
                            <i class="fas fa-tint"></i> Water All (Cost: 5L)
                        </button>
                        <button id="harvestBtn">
                            <i class="fas fa-sickle"></i> Harvest All
                        </button>
                        <button id="fertilizeBtn">
                            <i class="fas fa-flask"></i> Fertilize (Cost: 10)
                        </button>
                        <button id="nextDayBtn">
                            <i class="fas fa-forward"></i> Next Day
                        </button>
                    </div>
                    
                    <h2><i class="fas fa-store"></i> Crop Shop</h2>
                    <div class="crops-shop" id="cropsShop">
                        <!-- Crop options will be generated by JavaScript -->
                    </div>
                </div>
                
                <div class="panel">
                    <h2><i class="fas fa-info-circle"></i> Plant Information</h2>
                    <div class="plant-info" id="plantInfo">
                        <h3 id="plantName">Select a Plant</h3>
                        <div class="info-grid">
                            <div class="info-item">
                                <div class="info-label">Growth Time</div>
                                <div class="info-value" id="growthTime">-</div>
                            </div>
                            <div class="info-item">
                                <div class="info-label">Water Needs</div>
                                <div class="info-value" id="waterNeeds">-</div>
                            </div>
                            <div class="info-item">
                                <div class="info-label">Sunlight</div>
                                <div class="info-value" id="sunlight">-</div>
                            </div>
                            <div class="info-item">
                                <div class="info-label">Difficulty</div>
                                <div class="info-value" id="difficulty">-</div>
                            </div>
                        </div>
                        <div id="plantTips" style="margin-top: 15px; font-size: 0.9rem; color: #a0e7ff;">
                            Select a plant from the shop to see growing tips.
                        </div>
                    </div>
                    
                    <h2><i class="fas fa-newspaper"></i> Farm News</h2>
                    <div class="events-panel" id="eventsPanel">
                        <div class="event"><i class="fas fa-info-circle" style="color: #4d96ff;"></i> Welcome to your Space To Farm! Plant your first crop to get started.</div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="tab-content" id="guide-tab">
            <div class="panel">
                <h2><i class="fas fa-book"></i> Vegetable Growing Guide</h2>
                <p style="margin-bottom: 20px;">Learn how to grow vegetables with real-world information. These guidelines apply to both Earth and space farming!</p>
                
                <div class="guide-content">
                    <div class="guide-card">
                        <div class="guide-icon">🥬</div>
                        <div class="guide-title">Lettuce</div>
                        <div class="guide-details">
                            <ul>
                                <li><strong>Growth Time:</strong> 45-55 days</li>
                                <li><strong>Water Needs:</strong> 1-2 inches per week</li>
                                <li><strong>Sunlight:</strong> 6 hours daily</li>
                                <li><strong>Soil pH:</strong> 6.0-7.0</li>
                                <li><strong>Spacing:</strong> 6-12 inches apart</li>
                                <li><strong>Tips:</strong> Plant in cool weather, keep soil moist, harvest outer leaves first</li>
                            </ul>
                        </div>
                    </div>
                    
                    <div class="guide-card">
                        <div class="guide-icon">🥕</div>
                        <div class="guide-title">Carrots</div>
                        <div class="guide-details">
                            <ul>
                                <li><strong>Growth Time:</strong> 70-80 days</li>
                                <li><strong>Water Needs:</strong> 1 inch per week</li>
                                <li><strong>Sunlight:</strong> 6-8 hours daily</li>
                                <li><strong>Soil pH:</strong> 6.0-6.8</li>
                                <li><strong>Spacing:</strong> 2-3 inches apart</li>
                                <li><strong>Tips:</strong> Loose soil is essential, thin seedlings, harvest when ¾ inch diameter</li>
                            </ul>
                        </div>
                    </div>
                    
                    <div class="guide-card">
                        <div class="guide-icon">🍅</div>
                        <div class="guide-title">Tomatoes</div>
                        <div class="guide-details">
                            <ul>
                                <li><strong>Growth Time:</strong> 60-100 days</li>
                                <li><strong>Water Needs:</strong> 1-2 inches per week</li>
                                <li><strong>Sunlight:</strong> 8+ hours daily</li>
                                <li><strong>Soil pH:</strong> 6.2-6.8</li>
                                <li><strong>Spacing:</strong> 24-36 inches apart</li>
                                <li><strong>Tips:</strong> Support with stakes, water at base, harvest when colored but firm</li>
                            </ul>
                        </div>
                    </div>
                    
                    <div class="guide-card">
                        <div class="guide-icon">🥒</div>
                        <div class="guide-title">Cucumbers</div>
                        <div class="guide-details">
                            <ul>
                                <li><strong>Growth Time:</strong> 50-70 days</li>
                                <li><strong>Water Needs:</strong> 1-2 inches per week</li>
                                <li><strong>Sunlight:</strong> 6-8 hours daily</li>
                                <li><strong>Soil pH:</strong> 6.0-7.0</li>
                                <li><strong>Spacing:</strong> 36-60 inches apart</li>
                                <li><strong>Tips:</strong> Train vines on trellis, harvest frequently, pick before too large</li>
                            </ul>
                        </div>
                    </div>
                    
                    <div class="guide-card">
                        <div class="guide-icon">🫑</div>
                        <div class="guide-title">Bell Peppers</div>
                        <div class="guide-details">
                            <ul>
                                <li><strong>Growth Time:</strong> 60-90 days</li>
                                <li><strong>Water Needs:</strong> 1-2 inches per week</li>
                                <li><strong>Sunlight:</strong> 6-8 hours daily</li>
                                <li><strong>Soil pH:</strong> 6.0-6.8</li>
                                <li><strong>Spacing:</strong> 18-24 inches apart</li>
                                <li><strong>Tips:</strong> Warm weather crop, use mulch, harvest when firm and fully sized</li>
                            </ul>
                        </div>
                    </div>
                    
                    <div class="guide-card">
                        <div class="guide-icon">🥦</div>
                        <div class="guide-title">Broccoli</div>
                        <div class="guide-details">
                            <ul>
                                <li><strong>Growth Time:</strong> 60-100 days</li>
                                <li><strong>Water Needs:</strong> 1-1.5 inches per week</li>
                                <li><strong>Sunlight:</strong> 6+ hours daily</li>
                                <li><strong>Soil pH:</strong> 6.0-7.0</li>
                                <li><strong>Spacing:</strong> 18-24 inches apart</li>
                                <li><strong>Tips:</strong> Cool weather crop, harvest before flowering, side shoots develop after</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="tab-content" id="nasa-tab">
            <div class="panel">
                <h2><i class="fas fa-satellite"></i>  Agricultural Research</h2>
                <p style="margin-bottom: 20px;">NASA studies plant growth in space to develop sustainable food production for long-duration missions.</p>
                
                <div class="nasa-content">
                    <div class="nasa-card">
                        <div class="nasa-icon"><i class="fas fa-leaf"></i></div>
                        <div class="nasa-title">VEGGIE System</div>
                        <div class="nasa-details">
                            <p>NASA's Vegetable Production System (VEGGIE) is a space garden that helps researchers study plant growth in microgravity.</p>
                            <ul>
                                <li>Uses LED lights for plant growth</li>
                                <li>First used on ISS in 2014</li>
                                <li>Grown lettuce, zinnias, and cabbage</li>
                                <li>Plants grow in special pillows with soil substitute</li>
                                <li>Helps study plant growth in microgravity</li>
                            </ul>
                        </div>
                    </div>
                    
                    <div class="nasa-card">
                        <div class="nasa-icon"><i class="fas fa-lightbulb"></i></div>
                        <div class="nasa-title">Advanced Plant Habitat</div>
                        <div class="nasa-details">
                            <p>A fully automated plant growth facility that conducts plant biology research on the ISS.</p>
                            <ul>
                                <li>Controlled environment with over 180 sensors</li>
                                <li>Precise temperature, humidity and CO2 control</li>
                                <li>Can grow plants for 135 days autonomously</li>
                                <li>Uses white, red, blue, green, and far-red LEDs</li>
                                <li>Monitors plant growth with high-resolution cameras</li>
                            </ul>
                        </div>
                    </div>
                    
                    <div class="nasa-card">
                        <div class="nasa-icon"><i class="fas fa-recycle"></i></div>
                        <div class="nasa-title">Closed-Loop Systems</div>
                        <div class="nasa-details">
                            <p>NASA researches how to recycle water and nutrients in space agriculture.</p>
                            <ul>
                                <li>Plants help recycle astronaut wastewater</li>
                                <li>Food waste can be composted for fertilizer</li>
                                <li>Goal: 90%+ resource recycling for Mars missions</li>
                                <li>Uses hydroponic and aeroponic systems</li>
                                <li>Researching plant-based air revitalization</li>
                            </ul>
                        </div>
                    </div>
                    
                    <div class="nasa-card">
                        <div class="nasa-icon"><i class="fas fa-seedling"></i></div>
                        <div class="nasa-title">Space Crop Selection</div>
                        <div class="nasa-details">
                            <p>NASA has identified key crops suitable for space missions based on nutritional value and growth efficiency.</p>
                            <ul>
                                <li>Lettuce: Fast-growing, high in antioxidants</li>
                                <li>Radishes: Quick harvest, compact growth</li>
                                <li>Tomatoes: Nutrient-dense, good yields</li>
                                <li>Peas: Protein source, fix nitrogen in soil</li>
                                <li>Wheat: Staple food, can be grown hydroponically</li>
                            </ul>
                        </div>
                    </div>
                    
                    <div class="nasa-card">
                        <div class="nasa-icon"><i class="fas fa-tint"></i></div>
                        <div class="nasa-title">Water Management in Space</div>
                        <div class="nasa-details">
                            <p>NASA develops advanced systems for water conservation in space agriculture.</p>
                            <ul>
                                <li>Hydroponic systems use 90% less water than soil</li>
                                <li>Water recycling from air moisture and wastewater</li>
                                <li>Precise nutrient delivery to minimize waste</li>
                                <li>Researching drought-resistant plant varieties</li>
                                <li>Developing self-watering plant growth systems</li>
                            </ul>
                        </div>
                    </div>
                    
                    <div class="nasa-card">
                        <div class="nasa-icon"><i class="fas fa-thermometer-half"></i></div>
                        <div class="nasa-title">Environmental Control</div>
                        <div class="nasa-details">
                            <p>NASA's research on optimizing plant growth environments for space missions.</p>
                            <ul>
                                <li>Optimal temperature: 22-26°C for most crops</li>
                                <li>Relative humidity: 50-70% for plant growth</li>
                                <li>CO2 levels: 1000-5000 ppm enhance growth</li>
                                <li>Light intensity: 200-400 μmol/m²/s for vegetables</li>
                                <li>Photoperiod: 16-18 hours light for most crops</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <footer>
        <p>Space To Soil - Learn real agricultural techniques while enjoying space farming! Based on NASA research and Earth gardening practices.</p>
    </footer>

    <script>
        // Game data with real plant information
        const cropTypes = {
            "Lettuce": { 
                icon: "🥬", 
                price: 10, 
                growthTime: 5, 
                value: 20, 
                color: "#90EE90",
                waterNeeds: "1-2 inches/week",
                sunlight: "6 hours/day",
                difficulty: "Easy",
                tips: "Plant in cool weather. Keep soil consistently moist. Harvest outer leaves first for continuous production."
            },
            "Carrots": { 
                icon: "🥕", 
                price: 15, 
                growthTime: 7, 
                value: 30, 
                color: "#FF8C00",
                waterNeeds: "1 inch/week",
                sunlight: "6-8 hours/day",
                difficulty: "Medium",
                tips: "Requires loose, sandy soil. Thin seedlings to prevent crowding. Harvest when tops are about 3/4 inch in diameter."
            },
            "Tomatoes": { 
                icon: "🍅", 
                price: 20, 
                growthTime: 8, 
                value: 40, 
                color: "#FF4500",
                waterNeeds: "1-2 inches/week",
                sunlight: "8+ hours/day",
                difficulty: "Medium",
                tips: "Support with stakes or cages. Water at base to prevent disease. Harvest when fully colored but still firm."
            },
            "Cucumbers": { 
                icon: "🥒", 
                price: 18, 
                growthTime: 6, 
                value: 35, 
                color: "#90EE90",
                waterNeeds: "1-2 inches/week",
                sunlight: "6-8 hours/day",
                difficulty: "Easy",
                tips: "Train vines on trellis to save space. Harvest frequently to encourage more production. Pick before they get too large."
            },
            "Bell Peppers": { 
                icon: "🫑", 
                price: 22, 
                growthTime: 8, 
                value: 45, 
                color: "#32CD32",
                waterNeeds: "1-2 inches/week",
                sunlight: "6-8 hours/day",
                difficulty: "Medium",
                tips: "Warm weather crop. Use mulch to retain moisture. Harvest when firm and fully sized."
            },
            "Broccoli": { 
                icon: "🥦", 
                price: 25, 
                growthTime: 9, 
                value: 50, 
                color: "#228B22",
                waterNeeds: "1-1.5 inches/week",
                sunlight: "6+ hours/day",
                difficulty: "Hard",
                tips: "Cool weather crop. Harvest central head when tight and green. Side shoots will develop after main harvest."
            }
        };

        // Game state
        const gameState = {
            coins: 100,
            water: 50,
            energy: 30,
            seeds: 10,
            day: 1,
            selectedCrop: "Lettuce",
            plots: Array(8).fill(null),
            events: ["Welcome to your Space To Soil! Plant your first crop to get started."]
        };

        // Initialize the game
        function initGame() {
            createStars();
            createPlanets();
            createFarmGrid();
            createCropShop();
            updateUI();
            setupEventListeners();
            updatePlantInfo(gameState.selectedCrop);
            
            // Show welcome notification
            showNotification("Welcome to Space To Soil! Learn real plant growth techniques while farming in space.");
        }

        // Create starry background
        function createStars() {
            const starsContainer = document.getElementById('stars');
            for (let i = 0; i < 150; i++) {
                const star = document.createElement('div');
                star.className = 'star';
                star.style.width = `${Math.random() * 3}px`;
                star.style.height = star.style.width;
                star.style.left = `${Math.random() * 100}%`;
                star.style.top = `${Math.random() * 100}%`;
                star.style.animationDelay = `${Math.random() * 5}s`;
                starsContainer.appendChild(star);
            }
        }

        // Create planets in background
        function createPlanets() {
            const planet1 = document.getElementById('planet1');
            const planet2 = document.getElementById('planet2');
            
            planet1.style.width = '150px';
            planet1.style.height = '150px';
            planet1.style.background = 'radial-gradient(circle at 30% 30%, #ff9a76, #ff6b6b)';
            planet1.style.top = '10%';
            planet1.style.right = '10%';
            planet1.style.boxShadow = '0 0 30px #ff6b6b';
            
            planet2.style.width = '100px';
            planet2.style.height = '100px';
            planet2.style.background = 'radial-gradient(circle at 30% 30%, #a0e7ff, #4d96ff)';
            planet2.style.bottom = '10%';
            planet2.style.left = '10%';
            planet2.style.boxShadow = '0 0 30px #4d96ff';
        }

        // Create the farm grid
        function createFarmGrid() {
            const grid = document.getElementById('farmGrid');
            grid.innerHTML = '';
            
            // Create 8 plots (2x4 grid)
            for (let i = 0; i < 8; i++) {
                const plot = document.createElement('div');
                plot.className = 'plot empty';
                plot.dataset.index = i;
                
                plot.innerHTML = `
                    <div class="crop">🌱</div>
                    <div>Empty Plot</div>
                `;
                
                plot.addEventListener('click', () => handlePlotClick(i));
                grid.appendChild(plot);
            }
        }

        // Create crop shop options
        function createCropShop() {
            const shop = document.getElementById('cropsShop');
            shop.innerHTML = '';
            
            Object.keys(cropTypes).forEach(cropName => {
                const crop = cropTypes[cropName];
                const cropOption = document.createElement('div');
                cropOption.className = 'crop-option';
                if (cropName === gameState.selectedCrop) {
                    cropOption.classList.add('selected');
                }
                
                cropOption.dataset.crop = cropName;
                cropOption.innerHTML = `
                    <div class="crop-icon">${crop.icon}</div>
                    <div>${cropName}</div>
                    <div class="crop-price">${crop.price} coins</div>
                `;
                
                cropOption.addEventListener('click', () => {
                    gameState.selectedCrop = cropName;
                    updateCropSelection();
                    updatePlantInfo(cropName);
                    showNotification(`Selected ${cropName}. Check the Plant Information panel for growing tips!`);
                });
                
                shop.appendChild(cropOption);
            });
        }

        // Update plant information panel
        function updatePlantInfo(cropName) {
            const crop = cropTypes[cropName];
            document.getElementById('plantName').textContent = cropName;
            document.getElementById('growthTime').textContent = `${crop.growthTime} days`;
            document.getElementById('waterNeeds').textContent = crop.waterNeeds;
            document.getElementById('sunlight').textContent = crop.sunlight;
            document.getElementById('difficulty').textContent = crop.difficulty;
            document.getElementById('plantTips').textContent = crop.tips;
        }

        // Update crop selection UI
        function updateCropSelection() {
            document.querySelectorAll('.crop-option').forEach(option => {
                option.classList.remove('selected');
                if (option.dataset.crop === gameState.selectedCrop) {
                    option.classList.add('selected');
                }
            });
        }

        // Handle plot click
        function handlePlotClick(index) {
            const plot = gameState.plots[index];
            
            if (!plot) {
                // Plant a crop if empty and player has enough coins
                const crop = cropTypes[gameState.selectedCrop];
                if (gameState.coins >= crop.price) {
                    gameState.plots[index] = {
                        type: gameState.selectedCrop,
                        growth: 0,
                        growthTime: crop.growthTime,
                        value: crop.value,
                        icon: crop.icon
                    };
                    gameState.coins -= crop.price;
                    addEvent(`Planted ${gameState.selectedCrop} in plot ${index + 1}.`);
                    updateUI();
                    showNotification(`Planted ${gameState.selectedCrop}! It will take ${crop.growthTime} days to grow.`);
                } else {
                    showNotification("Not enough coins to plant this crop!", true);
                }
            } else if (plot.growth >= plot.growthTime) {
                // Harvest if ready
                gameState.coins += plot.value;
                gameState.plots[index] = null;
                addEvent(`Harvested ${plot.type} for ${plot.value} coins!`);
                updateUI();
                showNotification(`Harvested ${plot.type}! Earned ${plot.value} coins.`);
            } else {
                showNotification(`This ${plot.type} is still growing. ${plot.growthTime - plot.growth} days left.`);
            }
        }

        // Water all crops
        function waterAll() {
            if (gameState.water >= 5) {
                let watered = 0;
                gameState.plots.forEach((plot, index) => {
                    if (plot && plot.growth < plot.growthTime) {
                        plot.growth++;
                        watered++;
                    }
                });
                
                if (watered > 0) {
                    gameState.water -= 5;
                    addEvent(`Watered all crops! ${watered} crops grew faster.`);
                    updateUI();
                    showNotification("All crops watered! They're growing faster now.");
                } else {
                    showNotification("No crops need watering right now.");
                }
            } else {
                showNotification("Not enough water to irrigate!", true);
            }
        }

        // Harvest all ready crops
        function harvestAll() {
            let harvested = 0;
            let totalValue = 0;
            
            gameState.plots.forEach((plot, index) => {
                if (plot && plot.growth >= plot.growthTime) {
                    totalValue += plot.value;
                    harvested++;
                    gameState.plots[index] = null;
                }
            });
            
            if (harvested > 0) {
                gameState.coins += totalValue;
                addEvent(`Harvested ${harvested} crops for ${totalValue} coins!`);
                updateUI();
                showNotification(`Harvested ${harvested} crops! Earned ${totalValue} coins.`);
            } else {
                showNotification("No crops ready for harvest.");
            }
        }

        // Fertilize crops
        function fertilizeCrops() {
            if (gameState.coins >= 10) {
                let fertilized = 0;
                gameState.plots.forEach((plot, index) => {
                    if (plot && plot.growth < plot.growthTime) {
                        // Fertilizing gives a growth boost
                        plot.growth = Math.min(plot.growthTime, plot.growth + 2);
                        fertilized++;
                    }
                });
                
                if (fertilized > 0) {
                    gameState.coins -= 10;
                    addEvent(`Fertilized all crops! ${fertilized} crops received a growth boost.`);
                    updateUI();
                    showNotification("Fertilizer applied! Crops received a significant growth boost.");
                } else {
                    showNotification("No crops to fertilize.");
                }
            } else {
                showNotification("Not enough coins to buy fertilizer!", true);
            }
        }

        // Advance to next day
        function nextDay() {
            gameState.day++;
            gameState.water += 10;
            gameState.energy += 5;
            
            // Grow all crops a little
            gameState.plots.forEach(plot => {
                if (plot && plot.growth < plot.growthTime) {
                    // 50% chance to grow each day
                    if (Math.random() > 0.5) {
                        plot.growth++;
                    }
                }
            });
            
            addEvent(`A new day begins! Resources replenished.`);
            updateUI();
            showNotification(`Day ${gameState.day} has begun! Resources replenished.`);
        }

        // Add event to log
        function addEvent(message) {
            gameState.events.unshift(message);
            if (gameState.events.length > 5) {
                gameState.events.pop();
            }
            
            updateEventsLog();
        }

        // Update events log
        function updateEventsLog() {
            const eventsContainer = document.getElementById('eventsPanel');
            eventsContainer.innerHTML = '';
            
            gameState.events.forEach(eventText => {
                const eventElement = document.createElement('div');
                eventElement.className = 'event';
                
                // Add appropriate icon based on event type
                if (eventText.includes('Harvested') || eventText.includes('Collected')) {
                    eventElement.innerHTML = `<i class="fas fa-check-circle" style="color: #6bcf7f;"></i> ${eventText}`;
                } else if (eventText.includes('Planted')) {
                    eventElement.innerHTML = `<i class="fas fa-seedling" style="color: #6bcf7f;"></i> ${eventText}`;
                } else if (eventText.includes('Watered') || eventText.includes('Fertilized')) {
                    eventElement.innerHTML = `<i class="fas fa-tint" style="color: #4d96ff;"></i> ${eventText}`;
                } else {
                    eventElement.innerHTML = `<i class="fas fa-info-circle" style="color: #4d96ff;"></i> ${eventText}`;
                }
                
                eventsContainer.appendChild(eventElement);
            });
        }

        // Update the UI
        function updateUI() {
            // Update resources
            document.getElementById('coins').textContent = gameState.coins;
            document.getElementById('water').textContent = gameState.water;
            document.getElementById('energy').textContent = gameState.energy;
            document.getElementById('seeds').textContent = gameState.seeds;
            document.getElementById('day').textContent = gameState.day;
            
            // Update plots
            const plots = document.querySelectorAll('.plot');
            gameState.plots.forEach((plot, index) => {
                const plotElement = plots[index];
                
                if (plot) {
                    plotElement.classList.remove('empty');
                    plotElement.classList.add('planted');
                    
                    const growthPercent = (plot.growth / plot.growthTime) * 100;
                    const cropElement = plotElement.querySelector('.crop');
                    const progressBar = plotElement.querySelector('.progress');
                    
                    cropElement.textContent = plot.icon;
                    cropElement.classList.remove('growing', 'ready');
                    
                    if (plot.growth < plot.growthTime) {
                        cropElement.classList.add('growing');
                        plotElement.querySelector('div:nth-child(2)').textContent = `Growing... ${plot.growth}/${plot.growthTime}`;
                    } else {
                        cropElement.classList.add('ready');
                        plotElement.querySelector('div:nth-child(2)').textContent = 'Ready to Harvest!';
                    }
                    
                    if (progressBar) {
                        progressBar.style.width = `${growthPercent}%`;
                    }
                } else {
                    plotElement.classList.remove('planted');
                    plotElement.classList.add('empty');
                    plotElement.innerHTML = `
                        <div class="crop">🌱</div>
                        <div>Empty Plot</div>
                    `;
                }
            });
            
            // Update button states
            document.getElementById('waterBtn').disabled = gameState.water < 5;
            document.getElementById('fertilizeBtn').disabled = gameState.coins < 10;
        }

        // Show notification
        function showNotification(message, isError = false) {
            const notification = document.getElementById('notification');
            const notificationText = document.getElementById('notificationText');
            
            notificationText.textContent = message;
            
            if (isError) {
                notification.classList.add('error');
            } else {
                notification.classList.remove('error');
            }
            
            notification.classList.add('show');
            
            setTimeout(() => {
                notification.classList.remove('show');
            }, 3000);
        }

        // Set up event listeners
        function setupEventListeners() {
            document.getElementById('waterBtn').addEventListener('click', waterAll);
            document.getElementById('harvestBtn').addEventListener('click', harvestAll);
            document.getElementById('fertilizeBtn').addEventListener('click', fertilizeCrops);
            document.getElementById('nextDayBtn').addEventListener('click', nextDay);
            
            // Tab switching
            document.querySelectorAll('.tab').forEach(tab => {
                tab.addEventListener('click', () => {
                    const tabId = tab.dataset.tab;
                    
                    // Update active tab
                    document.querySelectorAll('.tab').forEach(t => t.classList.remove('active'));
                    tab.classList.add('active');
                    
                    // Update active content
                    document.querySelectorAll('.tab-content').forEach(content => {
                        content.classList.remove('active');
                    });
                    document.getElementById(`${tabId}-tab`).classList.add('active');
                });
            });
        }

        // Initialize the game when page loads
        window.addEventListener('load', initGame);
    </script>
</body>
</html>